{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lysco\\\\fso_projects\\\\fso_phonebook\\\\ui\\\\src\\\\App.js\";\nimport { useEffect, useState } from \"react\";\nimport Form from \"./components/form\";\nimport Search from \"./components/search\";\nimport Persons from \"./components/persons\";\nimport Notification from \"./components/notification\";\nimport personService from \"./services/persons\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const [persons, setPersons] = useState([]);\n  // const [newName, setNewName] = useState(\"\");\n  // const [newNumber, setNewNumber] = useState(\"\");\n  // const [search, setSearch] = useState(\"\");\n  // const [error, setError] = useState(false);\n  // useEffect(() => {\n  //   let getPersons = async () => {\n  //     await axios\n  //       .get(\"http://localhost:3001/api/persons\")\n  //       .then((response) => setPersons(response.data));\n  //   };\n  //   getPersons();\n  //   // personService.getAll().then((response) => setPersons(response));\n  // }, []);\n  // let filteredPersons = persons.filter((person) =>\n  //   person.name.toLowerCase().includes(search.toLowerCase())\n  // );\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   let isNewName = persons.find((person) => newName === person.name);\n  //   const changedPerson = { ...isNewName, number: newNumber };\n  //   if (isNewName) {\n  //     let result = window.confirm(\n  //       `${isNewName.name} already in phone book, replace number?`\n  //     );\n  //     if (result) {\n  //       personService.update(changedPerson).catch((error) => {\n  //         setError(\"updateFailed\");\n  //         setTimeout(() => {\n  //           setError(false);\n  //           setNewName(\"\");\n  //           setNewNumber(\"\");\n  //           setSearch(\"\");\n  //         }, 1000);\n  //         return;\n  //       });\n  //       let addPerson = persons.map((person) =>\n  //         person.id === isNewName.id ? changedPerson : person\n  //       );\n  //       setPersons(addPerson);\n  //       setError(\"update\");\n  //       setTimeout(() => {\n  //         setError(false);\n  //         setNewName(\"\");\n  //         setNewNumber(\"\");\n  //         setSearch(\"\");\n  //       }, 1000);\n  //       return;\n  //     }\n  //     setNewName(\"\");\n  //     setNewNumber(\"\");\n  //     setSearch(\"\");\n  //     return;\n  //   }\n  //   const newObject = {\n  //     name: newName,\n  //     number: newNumber,\n  //   };\n  //   personService\n  //     .create(newObject)\n  //     .then((response) => setPersons(persons.concat(response)));\n  //   setError(\"update\");\n  //   setTimeout(() => {\n  //     setError(false);\n  //     setNewName(\"\");\n  //     setNewNumber(\"\");\n  //     setSearch(\"\");\n  //   }, 1000);\n  // };\n  // const handleNameChange = (event) => {\n  //   setNewName(event.target.value);\n  // };\n  // const handleNumberChange = (event) => {\n  //   setNewNumber(event.target.value);\n  // };\n  // const handleSearch = (event) => {\n  //   setSearch(event.target.value);\n  // };\n  // const handleRemove = (id) => {\n  //   personService.remove(id).catch((error) => {\n  //     setError(\"removeError\");\n  //     setTimeout(() => {\n  //       setError(false);\n  //     }, 1000);\n  //   });\n  //   const newPersons = persons.filter((person) => person.id !== id);\n  //   setPersons(newPersons);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/lysco/fso_projects/fso_phonebook/ui/src/App.js"],"names":["useEffect","useState","Form","Search","Persons","Notification","personService","axios","App"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzHD;;KAAMA,G;AA2HN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Form from \"./components/form\";\r\nimport Search from \"./components/search\";\r\nimport Persons from \"./components/persons\";\r\nimport Notification from \"./components/notification\";\r\n\r\nimport personService from \"./services/persons\";\r\nimport axios from \"axios\";\r\nconst App = () => {\r\n  // const [persons, setPersons] = useState([]);\r\n  // const [newName, setNewName] = useState(\"\");\r\n  // const [newNumber, setNewNumber] = useState(\"\");\r\n  // const [search, setSearch] = useState(\"\");\r\n  // const [error, setError] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   let getPersons = async () => {\r\n  //     await axios\r\n  //       .get(\"http://localhost:3001/api/persons\")\r\n  //       .then((response) => setPersons(response.data));\r\n  //   };\r\n  //   getPersons();\r\n  //   // personService.getAll().then((response) => setPersons(response));\r\n  // }, []);\r\n\r\n  // let filteredPersons = persons.filter((person) =>\r\n  //   person.name.toLowerCase().includes(search.toLowerCase())\r\n  // );\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   let isNewName = persons.find((person) => newName === person.name);\r\n  //   const changedPerson = { ...isNewName, number: newNumber };\r\n\r\n  //   if (isNewName) {\r\n  //     let result = window.confirm(\r\n  //       `${isNewName.name} already in phone book, replace number?`\r\n  //     );\r\n  //     if (result) {\r\n  //       personService.update(changedPerson).catch((error) => {\r\n  //         setError(\"updateFailed\");\r\n  //         setTimeout(() => {\r\n  //           setError(false);\r\n  //           setNewName(\"\");\r\n  //           setNewNumber(\"\");\r\n  //           setSearch(\"\");\r\n  //         }, 1000);\r\n  //         return;\r\n  //       });\r\n\r\n  //       let addPerson = persons.map((person) =>\r\n  //         person.id === isNewName.id ? changedPerson : person\r\n  //       );\r\n\r\n  //       setPersons(addPerson);\r\n  //       setError(\"update\");\r\n  //       setTimeout(() => {\r\n  //         setError(false);\r\n  //         setNewName(\"\");\r\n  //         setNewNumber(\"\");\r\n  //         setSearch(\"\");\r\n  //       }, 1000);\r\n\r\n  //       return;\r\n  //     }\r\n  //     setNewName(\"\");\r\n  //     setNewNumber(\"\");\r\n  //     setSearch(\"\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   const newObject = {\r\n  //     name: newName,\r\n  //     number: newNumber,\r\n  //   };\r\n\r\n  //   personService\r\n  //     .create(newObject)\r\n  //     .then((response) => setPersons(persons.concat(response)));\r\n\r\n  //   setError(\"update\");\r\n  //   setTimeout(() => {\r\n  //     setError(false);\r\n  //     setNewName(\"\");\r\n  //     setNewNumber(\"\");\r\n  //     setSearch(\"\");\r\n  //   }, 1000);\r\n  // };\r\n\r\n  // const handleNameChange = (event) => {\r\n  //   setNewName(event.target.value);\r\n  // };\r\n\r\n  // const handleNumberChange = (event) => {\r\n  //   setNewNumber(event.target.value);\r\n  // };\r\n\r\n  // const handleSearch = (event) => {\r\n  //   setSearch(event.target.value);\r\n  // };\r\n\r\n  // const handleRemove = (id) => {\r\n  //   personService.remove(id).catch((error) => {\r\n  //     setError(\"removeError\");\r\n  //     setTimeout(() => {\r\n  //       setError(false);\r\n  //     }, 1000);\r\n  //   });\r\n  //   const newPersons = persons.filter((person) => person.id !== id);\r\n  //   setPersons(newPersons);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      {/* {error ? <Notification error={error} newName={newName} /> : null}\r\n      <Search handleSearch={handleSearch} search={search} />\r\n      <h2>Add a new</h2>\r\n      <Form\r\n        handleNumberChange={handleNumberChange}\r\n        handleNameChange={handleNameChange}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons filteredPersons={filteredPersons} handleRemove={handleRemove} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}